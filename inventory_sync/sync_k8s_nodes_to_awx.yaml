---
- name: Ensure AWX inventory via API (preflight + org lookup, no params)
  hosts: localhost
  gather_facts: false

  vars:
    # === Job Template의 Extra Vars에서 채우십시오 ===
    controller_host: "http://awx-service.awx.svc.cluster.local"   # 내부 서비스 DNS 권장
    controller_oauthtoken: ""                                      # Users → Tokens → Add 로 발급
    organization_name: "Default"                                   # 실제 조직명
    inventory_name: "k3s-nodes"

  tasks:
    - name: "Preflight | AWX /api/v2/ping"
      ansible.builtin.uri:
        url: "{{ controller_host | regex_replace('/$','') }}/api/v2/ping/"
        method: GET
        headers:
          Authorization: "Bearer {{ controller_oauthtoken }}"
        return_content: true
        status_code: 200
        validate_certs: false
      register: awx_ping

    - name: "Build safe org lookup URL (no spaces, urlencode)"
      ansible.builtin.set_fact:
        org_lookup_url: >-
          {{ controller_host | regex_replace('/$','') }}/api/v2/organizations/?name={{ organization_name | urlencode }}

    - name: "Debug | org_lookup_url"
      ansible.builtin.debug:
        var: org_lookup_url

    - name: "Lookup | Organization by name"
      ansible.builtin.uri:
        url: "{{ org_lookup_url }}"
        method: GET
        headers:
          Authorization: "Bearer {{ controller_oauthtoken }}"
        return_content: true
        status_code: 200
        validate_certs: false
      register: org_q

    - name: "Fail if organization not found"
      ansible.builtin.fail:
        msg: "Organization '{{ organization_name }}' not found (results=0)."
      when: (org_q.json.results | length) == 0

    - name: "Set fact | organization_id"
      ansible.builtin.set_fact:
        organization_id: "{{ org_q.json.results[0].id | int }}"

    - name: "Ensure target inventory exists (by org_id)"
      awx.awx.inventory:
        name: "{{ inventory_name }}"
        organization: "{{ organization_id }}"     # 숫자 ID 사용
        state: present
        # 호환성 위해 두 계열 모두 명시 (awx.awx 버전 차 대응)
        controller_host: "{{ controller_host }}"
        controller_oauthtoken: "{{ controller_oauthtoken }}"
        tower_host: "{{ controller_host }}"
        tower_oauthtoken: "{{ controller_oauthtoken }}"
        validate_certs: false
        tower_verify_ssl: false
