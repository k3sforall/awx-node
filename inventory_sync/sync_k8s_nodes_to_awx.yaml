---
- name: Sync K8s nodes and labels into AWX inventory
  hosts: localhost
  gather_facts: false

  vars:
    k8s_host: "https://kubernetes.default.svc"
    k8s_token: ""
    k8s_validate_certs: false
    controller_host: "http://awx.dokjongban.com"
    controller_oauthtoken: ""
    organization: "Default"
    inventory_name: "k3s-nodes"

  tasks:
    - name: Collect Kubernetes Nodes via API (no kubeconfig needed)
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Node
        host: "{{ k8s_host }}"
        api_key: "{{ k8s_token }}"          # ❗ 토큰만 (Bearer 접두어 금지)
        validate_certs: "{{ k8s_validate_certs }}"
      register: k8s_nodes

    - name: Ensure target inventory exists
      awx.awx.inventory:
        name: "{{ inventory_name }}"
        organization: "{{ organization }}"
        state: present
        controller_host: "{{ controller_host }}"
        controller_oauthtoken: "{{ controller_oauthtoken }}"
        validate_certs: false

    - name: Build simplified host objects
      vars:
        jq: >-
          [].{name: metadata.name,
              labels: metadata.labels,
              ip: (status.addresses | items
                   | selectattr('type','equalto','InternalIP')
                   | map(attribute='address') | first)}
      set_fact:
        nodes_flat: "{{ k8s_nodes.resources | default([]) | json_query(jq) }}"

    - name: Upsert hosts with k8s labels as variables
      awx.awx.host:
        name: "{{ item.name }}"
        inventory: "{{ inventory_name }}"
        state: present
        variables:
          ansible_host: "{{ item.ip }}"
          k8s_name: "{{ item.name }}"
          k8s_labels: "{{ item.labels | default({}) }}"
        controller_host: "{{ controller_host }}"
        controller_oauthtoken: "{{ controller_oauthtoken }}"
        validate_certs: false
      loop: "{{ nodes_flat }}"
